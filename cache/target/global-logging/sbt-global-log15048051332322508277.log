[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addDefaultCommands), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addDefaultCommands, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(initialize), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(initialize, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(boot, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(writeSbtVersion, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.4.9 (Ubuntu Java 11.0.11)[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.defaultLoad until apply took 1104.810608ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 287.205802ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.522606ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /root/bossa/project[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadUnit: mkEval took 10.010341ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /root/bossa/project, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 59.787383 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project bossa-build from plugins.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.resolveProject(bossa-build) took 158.949822ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadTransitive: finalizeProject(Project(id bossa-build, base: /root/bossa/project, plugins: List(<none>))) took 269.423779ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /root/bossa/project, returning: (bossa-build)[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: loadedProjectsRaw took 1332.544371ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: cleanEvalClasses took 37.754438ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadUnit(file:/root/bossa/project/, ...) took 1666.594588ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: load took 2076.27564ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: resolveProjects took 21.503994ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: finalTransforms took 156.207222ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: config.delegates took 27.536737ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: Def.make(settings)... took 1684.273511ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: structureIndex took 294.941231ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: mkStreams took 2.517892ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /root/bossa/project[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: plugins took 8751.773374ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: defsScala took 0.013411ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /root/bossa[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: mkEval took 0.515341ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found root project bossaRoot w/ remaining testchipip,rocketchip,chipyard,boom,iocell,sifive_blocks[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePreviewPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SiteScaladocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.asciidoctor.AsciidoctorPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.gitbook.GitBookPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.hugo.HugoPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.jekyll.JekyllPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.nanoc.NanocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.pamflet.PamfletPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.site.preprocess.PreprocessPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.sphinx.SphinxPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(sbtbuildinfo.BuildInfoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(xerial.sbt.pack.PackPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.BaseUnidocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.GenJavadocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.JavaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(sbtunidoc.PublishJavadocPlugin),Set(Atom(sbtunidoc.GenJavadocPlugin))), Clause(Atom(sbtunidoc.ScalaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(scoverage.ScoverageSbtPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.scalastyle.sbt.ScalastylePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.simplytyped.Antlr4Plugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufTestPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.tools.mima.plugin.MimaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtsriracha.SrirachaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(mdoc.MdocPlugin))), Clause(Atom(mdoc.MdocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.GitBranchPrompt),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.lightbend.paradox.sbt.ParadoxPlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(com.typesafe.sbt.site.SitePreviewPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(xerial.sbt.pack.PackPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scoverage.ScoverageSbtPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalastyle.sbt.ScalastylePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.tools.mima.plugin.MimaPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtsriracha.SrirachaPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.typesafe.sbt.GitPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,com.typesafe.sbt.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbt.site.SitePlugin,sbtsriracha.SrirachaPlugin,scoverage.ScoverageSbtPlugin,net.virtualvoid.sbt.graph.DependencyGraphPlugin,com.typesafe.tools.mima.plugin.MimaPlugin,sbt.plugins.SemanticdbPlugin,xerial.sbt.pack.PackPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,org.scalastyle.sbt.ScalastylePlugin,com.typesafe.sbt.site.SitePreviewPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 32.051987 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project bossaRoot from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.resolveProject(bossaRoot) took 289.432969ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadTransitive: finalizeProject(Project(id bossaRoot, base: /root/bossa, plugins: List(<none>))) took 325.242876ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Loading project testchipip @ /root/bossa/generators/testchipip[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePreviewPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SiteScaladocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.asciidoctor.AsciidoctorPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.gitbook.GitBookPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.hugo.HugoPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.jekyll.JekyllPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.nanoc.NanocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.pamflet.PamfletPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.site.preprocess.PreprocessPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.sphinx.SphinxPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(sbtbuildinfo.BuildInfoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(xerial.sbt.pack.PackPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.BaseUnidocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.GenJavadocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.JavaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(sbtunidoc.PublishJavadocPlugin),Set(Atom(sbtunidoc.GenJavadocPlugin))), Clause(Atom(sbtunidoc.ScalaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(scoverage.ScoverageSbtPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.scalastyle.sbt.ScalastylePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.simplytyped.Antlr4Plugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufTestPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.tools.mima.plugin.MimaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtsriracha.SrirachaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(mdoc.MdocPlugin))), Clause(Atom(mdoc.MdocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.GitBranchPrompt),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.lightbend.paradox.sbt.ParadoxPlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(com.typesafe.sbt.site.SitePreviewPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(xerial.sbt.pack.PackPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scoverage.ScoverageSbtPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalastyle.sbt.ScalastylePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.tools.mima.plugin.MimaPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtsriracha.SrirachaPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.typesafe.sbt.GitPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,com.typesafe.sbt.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbt.site.SitePlugin,sbtsriracha.SrirachaPlugin,scoverage.ScoverageSbtPlugin,net.virtualvoid.sbt.graph.DependencyGraphPlugin,com.typesafe.tools.mima.plugin.MimaPlugin,sbt.plugins.SemanticdbPlugin,xerial.sbt.pack.PackPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,org.scalastyle.sbt.ScalastylePlugin,com.typesafe.sbt.site.SitePreviewPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 8.585435 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project testchipip from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.resolveProject(testchipip) took 13.133134ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Loading project rocketchip @ /root/bossa/generators/rocket-chip[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(xerial.sbt.pack.PackPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePreviewPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SiteScaladocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.asciidoctor.AsciidoctorPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.gitbook.GitBookPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.hugo.HugoPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.jekyll.JekyllPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.nanoc.NanocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.pamflet.PamfletPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.site.preprocess.PreprocessPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.sphinx.SphinxPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(sbtbuildinfo.BuildInfoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(xerial.sbt.pack.PackPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.BaseUnidocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.GenJavadocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.JavaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(sbtunidoc.PublishJavadocPlugin),Set(Atom(sbtunidoc.GenJavadocPlugin))), Clause(Atom(sbtunidoc.ScalaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(scoverage.ScoverageSbtPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.scalastyle.sbt.ScalastylePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.simplytyped.Antlr4Plugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufTestPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.tools.mima.plugin.MimaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtsriracha.SrirachaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(mdoc.MdocPlugin))), Clause(Atom(mdoc.MdocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.GitBranchPrompt),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.lightbend.paradox.sbt.ParadoxPlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(com.typesafe.sbt.site.SitePreviewPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scoverage.ScoverageSbtPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalastyle.sbt.ScalastylePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.tools.mima.plugin.MimaPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtsriracha.SrirachaPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.typesafe.sbt.GitPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,xerial.sbt.pack.PackPlugin,com.typesafe.sbt.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbt.site.SitePlugin,sbtsriracha.SrirachaPlugin,scoverage.ScoverageSbtPlugin,net.virtualvoid.sbt.graph.DependencyGraphPlugin,com.typesafe.tools.mima.plugin.MimaPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,org.scalastyle.sbt.ScalastylePlugin,com.typesafe.sbt.site.SitePreviewPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 26.443161 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project rocketchip from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.resolveProject(rocketchip) took 8.254377ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Loading project chipyard @ /root/bossa/generators/chipyard[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePreviewPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SiteScaladocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.asciidoctor.AsciidoctorPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.gitbook.GitBookPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.hugo.HugoPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.jekyll.JekyllPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.nanoc.NanocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.pamflet.PamfletPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.site.preprocess.PreprocessPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.sphinx.SphinxPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(sbtbuildinfo.BuildInfoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(xerial.sbt.pack.PackPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.BaseUnidocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.GenJavadocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.JavaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(sbtunidoc.PublishJavadocPlugin),Set(Atom(sbtunidoc.GenJavadocPlugin))), Clause(Atom(sbtunidoc.ScalaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(scoverage.ScoverageSbtPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.scalastyle.sbt.ScalastylePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.simplytyped.Antlr4Plugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufTestPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.tools.mima.plugin.MimaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtsriracha.SrirachaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(mdoc.MdocPlugin))), Clause(Atom(mdoc.MdocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.GitBranchPrompt),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.lightbend.paradox.sbt.ParadoxPlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(com.typesafe.sbt.site.SitePreviewPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(xerial.sbt.pack.PackPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scoverage.ScoverageSbtPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalastyle.sbt.ScalastylePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.tools.mima.plugin.MimaPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtsriracha.SrirachaPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.typesafe.sbt.GitPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,com.typesafe.sbt.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbt.site.SitePlugin,sbtsriracha.SrirachaPlugin,scoverage.ScoverageSbtPlugin,net.virtualvoid.sbt.graph.DependencyGraphPlugin,com.typesafe.tools.mima.plugin.MimaPlugin,sbt.plugins.SemanticdbPlugin,xerial.sbt.pack.PackPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,org.scalastyle.sbt.ScalastylePlugin,com.typesafe.sbt.site.SitePreviewPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 7.409396 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.resolveProject(chipyard) took 16.628679ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Loading project boom @ /root/bossa/generators/boom[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePreviewPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SiteScaladocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.asciidoctor.AsciidoctorPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.gitbook.GitBookPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.hugo.HugoPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.jekyll.JekyllPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.nanoc.NanocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.pamflet.PamfletPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.site.preprocess.PreprocessPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.sphinx.SphinxPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(sbtbuildinfo.BuildInfoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(xerial.sbt.pack.PackPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.BaseUnidocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.GenJavadocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.JavaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(sbtunidoc.PublishJavadocPlugin),Set(Atom(sbtunidoc.GenJavadocPlugin))), Clause(Atom(sbtunidoc.ScalaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(scoverage.ScoverageSbtPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.scalastyle.sbt.ScalastylePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.simplytyped.Antlr4Plugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufTestPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.tools.mima.plugin.MimaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtsriracha.SrirachaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(mdoc.MdocPlugin))), Clause(Atom(mdoc.MdocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.GitBranchPrompt),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.lightbend.paradox.sbt.ParadoxPlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(com.typesafe.sbt.site.SitePreviewPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(xerial.sbt.pack.PackPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scoverage.ScoverageSbtPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalastyle.sbt.ScalastylePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.tools.mima.plugin.MimaPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtsriracha.SrirachaPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.typesafe.sbt.GitPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,com.typesafe.sbt.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbt.site.SitePlugin,sbtsriracha.SrirachaPlugin,scoverage.ScoverageSbtPlugin,net.virtualvoid.sbt.graph.DependencyGraphPlugin,com.typesafe.tools.mima.plugin.MimaPlugin,sbt.plugins.SemanticdbPlugin,xerial.sbt.pack.PackPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,org.scalastyle.sbt.ScalastylePlugin,com.typesafe.sbt.site.SitePreviewPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 10.427136 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project boom from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.resolveProject(boom) took 4.419304ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Loading project iocell @ /root/bossa/tools/barstools/iocell[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePreviewPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SiteScaladocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.asciidoctor.AsciidoctorPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.gitbook.GitBookPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.hugo.HugoPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.jekyll.JekyllPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.nanoc.NanocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.pamflet.PamfletPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.site.preprocess.PreprocessPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.sphinx.SphinxPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(sbtbuildinfo.BuildInfoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(xerial.sbt.pack.PackPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.BaseUnidocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.GenJavadocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.JavaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(sbtunidoc.PublishJavadocPlugin),Set(Atom(sbtunidoc.GenJavadocPlugin))), Clause(Atom(sbtunidoc.ScalaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(scoverage.ScoverageSbtPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.scalastyle.sbt.ScalastylePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.simplytyped.Antlr4Plugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufTestPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.tools.mima.plugin.MimaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtsriracha.SrirachaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(mdoc.MdocPlugin))), Clause(Atom(mdoc.MdocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.GitBranchPrompt),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.lightbend.paradox.sbt.ParadoxPlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(com.typesafe.sbt.site.SitePreviewPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(xerial.sbt.pack.PackPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scoverage.ScoverageSbtPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalastyle.sbt.ScalastylePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.tools.mima.plugin.MimaPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtsriracha.SrirachaPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.typesafe.sbt.GitPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,com.typesafe.sbt.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbt.site.SitePlugin,sbtsriracha.SrirachaPlugin,scoverage.ScoverageSbtPlugin,net.virtualvoid.sbt.graph.DependencyGraphPlugin,com.typesafe.tools.mima.plugin.MimaPlugin,sbt.plugins.SemanticdbPlugin,xerial.sbt.pack.PackPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,org.scalastyle.sbt.ScalastylePlugin,com.typesafe.sbt.site.SitePreviewPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 4.946897 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.resolveProject(iocell) took 21.534841ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Loading project sifive_blocks @ /root/bossa/generators/sifive-blocks[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePreviewPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SiteScaladocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.asciidoctor.AsciidoctorPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.gitbook.GitBookPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.hugo.HugoPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.jekyll.JekyllPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.nanoc.NanocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.pamflet.PamfletPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.site.preprocess.PreprocessPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.sphinx.SphinxPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(sbtbuildinfo.BuildInfoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(xerial.sbt.pack.PackPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.BaseUnidocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.GenJavadocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.JavaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(sbtunidoc.PublishJavadocPlugin),Set(Atom(sbtunidoc.GenJavadocPlugin))), Clause(Atom(sbtunidoc.ScalaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(scoverage.ScoverageSbtPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.scalastyle.sbt.ScalastylePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.simplytyped.Antlr4Plugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufTestPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.tools.mima.plugin.MimaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtsriracha.SrirachaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(mdoc.MdocPlugin))), Clause(Atom(mdoc.MdocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.GitBranchPrompt),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.lightbend.paradox.sbt.ParadoxPlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(com.typesafe.sbt.site.SitePreviewPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(xerial.sbt.pack.PackPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scoverage.ScoverageSbtPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalastyle.sbt.ScalastylePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.tools.mima.plugin.MimaPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtsriracha.SrirachaPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.typesafe.sbt.GitPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,com.typesafe.sbt.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbt.site.SitePlugin,sbtsriracha.SrirachaPlugin,scoverage.ScoverageSbtPlugin,net.virtualvoid.sbt.graph.DependencyGraphPlugin,com.typesafe.tools.mima.plugin.MimaPlugin,sbt.plugins.SemanticdbPlugin,xerial.sbt.pack.PackPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,org.scalastyle.sbt.ScalastylePlugin,com.typesafe.sbt.site.SitePreviewPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 5.051974 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.resolveProject(sifive_blocks) took 10.405372ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Loading project api-config-chipsalliance @ /root/bossa/generators/rocket-chip/api-config-chipsalliance/build-rules/sbt[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePreviewPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SiteScaladocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.asciidoctor.AsciidoctorPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.gitbook.GitBookPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.hugo.HugoPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.jekyll.JekyllPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.nanoc.NanocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.pamflet.PamfletPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.site.preprocess.PreprocessPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.sphinx.SphinxPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(sbtbuildinfo.BuildInfoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(xerial.sbt.pack.PackPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.BaseUnidocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.GenJavadocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.JavaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(sbtunidoc.PublishJavadocPlugin),Set(Atom(sbtunidoc.GenJavadocPlugin))), Clause(Atom(sbtunidoc.ScalaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(scoverage.ScoverageSbtPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.scalastyle.sbt.ScalastylePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.simplytyped.Antlr4Plugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufTestPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.tools.mima.plugin.MimaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtsriracha.SrirachaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(mdoc.MdocPlugin))), Clause(Atom(mdoc.MdocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.GitBranchPrompt),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.lightbend.paradox.sbt.ParadoxPlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(com.typesafe.sbt.site.SitePreviewPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(xerial.sbt.pack.PackPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scoverage.ScoverageSbtPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalastyle.sbt.ScalastylePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.tools.mima.plugin.MimaPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtsriracha.SrirachaPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.typesafe.sbt.GitPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,com.typesafe.sbt.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbt.site.SitePlugin,sbtsriracha.SrirachaPlugin,scoverage.ScoverageSbtPlugin,net.virtualvoid.sbt.graph.DependencyGraphPlugin,com.typesafe.tools.mima.plugin.MimaPlugin,sbt.plugins.SemanticdbPlugin,xerial.sbt.pack.PackPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,org.scalastyle.sbt.ScalastylePlugin,com.typesafe.sbt.site.SitePreviewPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 22.204836 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project api-config-chipsalliance from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.resolveProject(api-config-chipsalliance) took 5.946553ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Loading project hardfloat @ /root/bossa/generators/rocket-chip/hardfloat[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePreviewPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SiteScaladocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.asciidoctor.AsciidoctorPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.gitbook.GitBookPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.hugo.HugoPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.jekyll.JekyllPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.nanoc.NanocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.pamflet.PamfletPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.site.preprocess.PreprocessPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.sphinx.SphinxPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(sbtbuildinfo.BuildInfoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(xerial.sbt.pack.PackPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.BaseUnidocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.GenJavadocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.JavaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(sbtunidoc.PublishJavadocPlugin),Set(Atom(sbtunidoc.GenJavadocPlugin))), Clause(Atom(sbtunidoc.ScalaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(scoverage.ScoverageSbtPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.scalastyle.sbt.ScalastylePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.simplytyped.Antlr4Plugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufTestPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.tools.mima.plugin.MimaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtsriracha.SrirachaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(mdoc.MdocPlugin))), Clause(Atom(mdoc.MdocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.GitBranchPrompt),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.lightbend.paradox.sbt.ParadoxPlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(com.typesafe.sbt.site.SitePreviewPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(xerial.sbt.pack.PackPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scoverage.ScoverageSbtPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalastyle.sbt.ScalastylePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.tools.mima.plugin.MimaPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtsriracha.SrirachaPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.typesafe.sbt.GitPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,com.typesafe.sbt.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbt.site.SitePlugin,sbtsriracha.SrirachaPlugin,scoverage.ScoverageSbtPlugin,net.virtualvoid.sbt.graph.DependencyGraphPlugin,com.typesafe.tools.mima.plugin.MimaPlugin,sbt.plugins.SemanticdbPlugin,xerial.sbt.pack.PackPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,org.scalastyle.sbt.ScalastylePlugin,com.typesafe.sbt.site.SitePreviewPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 25.679099 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project hardfloat from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.resolveProject(hardfloat) took 21.999703ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Loading project rocket-macros @ /root/bossa/generators/rocket-chip/macros[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePreviewPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SiteScaladocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.asciidoctor.AsciidoctorPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.gitbook.GitBookPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.hugo.HugoPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.jekyll.JekyllPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.nanoc.NanocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.pamflet.PamfletPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.site.preprocess.PreprocessPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.sphinx.SphinxPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(sbtbuildinfo.BuildInfoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(xerial.sbt.pack.PackPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.BaseUnidocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.GenJavadocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.JavaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(sbtunidoc.PublishJavadocPlugin),Set(Atom(sbtunidoc.GenJavadocPlugin))), Clause(Atom(sbtunidoc.ScalaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(scoverage.ScoverageSbtPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.scalastyle.sbt.ScalastylePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.simplytyped.Antlr4Plugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufTestPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.tools.mima.plugin.MimaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtsriracha.SrirachaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(mdoc.MdocPlugin))), Clause(Atom(mdoc.MdocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.GitBranchPrompt),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.lightbend.paradox.sbt.ParadoxPlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(com.typesafe.sbt.site.SitePreviewPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(xerial.sbt.pack.PackPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scoverage.ScoverageSbtPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalastyle.sbt.ScalastylePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.tools.mima.plugin.MimaPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtsriracha.SrirachaPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.typesafe.sbt.GitPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,com.typesafe.sbt.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbt.site.SitePlugin,sbtsriracha.SrirachaPlugin,scoverage.ScoverageSbtPlugin,net.virtualvoid.sbt.graph.DependencyGraphPlugin,com.typesafe.tools.mima.plugin.MimaPlugin,sbt.plugins.SemanticdbPlugin,xerial.sbt.pack.PackPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,org.scalastyle.sbt.ScalastylePlugin,com.typesafe.sbt.site.SitePreviewPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 3.544351 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.resolveProject(rocket-macros) took 8.957959ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Loading project docs @ /root/bossa/generators/rocket-chip/docs-target[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(mdoc.MdocPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.sbtghpages.GhpagesPlugin),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.site.SitePreviewPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SiteScaladocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.asciidoctor.AsciidoctorPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.gitbook.GitBookPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.hugo.HugoPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.jekyll.JekyllPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.nanoc.NanocPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.pamflet.PamfletPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.paradox.ParadoxSitePlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.site.preprocess.PreprocessPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.sphinx.SphinxPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(sbtbuildinfo.BuildInfoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(xerial.sbt.pack.PackPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.BaseUnidocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.GenJavadocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtunidoc.JavaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(sbtunidoc.PublishJavadocPlugin),Set(Atom(sbtunidoc.GenJavadocPlugin))), Clause(Atom(sbtunidoc.ScalaUnidocPlugin),Set(Atom(sbtunidoc.BaseUnidocPlugin))), Clause(Atom(scoverage.ScoverageSbtPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.scalastyle.sbt.ScalastylePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.simplytyped.Antlr4Plugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotobuf.ProtobufTestPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(scalafix.sbt.ScalafixTestkitPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.tools.mima.plugin.MimaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtsriracha.SrirachaPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.DocusaurusPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(mdoc.MdocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.typesafe.sbt.GitBranchPrompt),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(com.typesafe.sbt.GitVersioning),Set(Atom(com.typesafe.sbt.GitPlugin))), Clause(Atom(com.lightbend.paradox.sbt.ParadoxPlugin),Set(Atom(com.typesafe.sbt.web.SbtWeb))), Clause(Atom(com.typesafe.sbt.web.SbtWeb),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(net.virtualvoid.sbt.graph.DependencyGraphPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.sbt.site.SitePlugin))), Clause(Atom(com.typesafe.sbt.site.SitePlugin),Set(Atom(com.typesafe.sbt.site.SitePreviewPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(xerial.sbt.pack.PackPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scoverage.ScoverageSbtPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.scalastyle.sbt.ScalastylePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(scalafix.sbt.ScalafixPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(com.typesafe.tools.mima.plugin.MimaPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtsriracha.SrirachaPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(com.typesafe.sbt.GitPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,mdoc.MdocPlugin,com.typesafe.sbt.GitPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,com.typesafe.sbt.site.SitePlugin,sbtsriracha.SrirachaPlugin,scoverage.ScoverageSbtPlugin,net.virtualvoid.sbt.graph.DependencyGraphPlugin,com.typesafe.tools.mima.plugin.MimaPlugin,sbt.plugins.SemanticdbPlugin,xerial.sbt.pack.PackPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,scalafix.sbt.ScalafixPlugin,sbt.plugins.MiniDependencyTreePlugin,org.scalastyle.sbt.ScalastylePlugin,com.typesafe.sbt.site.SitePreviewPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 8.447922 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.resolveProject(docs) took 19.180081ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /root/bossa, returning: (bossaRoot, testchipip, rocketchip, chipyard, boom, iocell, sifive_blocks, api-config-chipsalliance, hardfloat, rocket-macros, docs)[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: loadedProjectsRaw took 1785.002876ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: cleanEvalClasses took 10.109311ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.loadUnit(file:/root/bossa/, ...) took 10549.747892ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: load took 10623.187414ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: resolveProjects took 18.760092ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: finalTransforms took 292.667744ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: config.delegates took 26.621622ms[0m
[0m[[0m[0minfo[0m] [0m[0mresolving key references (14046 settings) ...[0m
